{"ast":null,"code":"var _jsxFileName = \"/Users/leemadeleine/dev/music-app/music-app/src/components/SimpleScreen/SimpleScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getSimple } from \"../../services/APIs/MusicAppAPI/MusicAppAPI.js\";\nimport { moods } from \"./config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div``;\n_c = Container;\nconst getSrc = externalUrl => {\n  const parts = externalUrl.split(\"/playlist/\");\n  const src = parts[0] + \"/embed/playlist/\" + parts[1];\n  return src;\n};\nconst SimpleScreen = () => {\n  _s();\n  const [hasError, setHasError] = useState(false);\n  const [currentMood, setCurrentMood] = useState(null);\n  const [currentURI, setCurrentURI] = useState(null);\n  const [currentSrc, setCurrentSrc] = useState(null);\n  useEffect(() => {\n    if (currentMood) {\n      try {\n        async function fetchData() {\n          const response = await getSimple(currentMood);\n          setCurrentURI(response.uri);\n          setCurrentSrc(getSrc(response.uri));\n        }\n        fetchData();\n      } catch {\n        setHasError(true);\n      }\n    }\n  }, [currentMood]);\n  useEffect(() => {\n    window.onSpotifyIframeApiReady = IFrameAPI => {\n      let element = document.getElementById(\"embed-iframe\");\n      let options = {\n        uri: \"spotify:playlist:71I1utEsNeXmb4O28RAeaz\"\n      };\n      let callback = EmbedController => {\n        if (currentURI) {\n          EmbedController.loadUri(currentURI);\n          setCurrentURI(null);\n        }\n      };\n      IFrameAPI.createController(element, options, callback);\n    };\n  }, [currentURI]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), Object.keys(moods).map(moodName => {\n      const mood = moods[moodName];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setCurrentMood(moodName),\n        children: mood.displayName\n      }, moodName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"embed-iframe\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: \"playlist-iframe\",\n        src: currentSrc || \"https://open.spotify.com/playlist/71I1utEsNeXmb4O28RAeaz?utm_source=generator\",\n        width: \"380\",\n        height: \"380\",\n        frameBorder: \"0\",\n        allow: \"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n      }, currentURI, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleScreen, \"QLa+14F1kzFUBr4Wg5fn2vEzOtc=\");\n_c2 = SimpleScreen;\nexport default SimpleScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SimpleScreen\");","map":{"version":3,"names":["useEffect","useState","styled","getSimple","moods","Container","div","getSrc","externalUrl","parts","split","src","SimpleScreen","hasError","setHasError","currentMood","setCurrentMood","currentURI","setCurrentURI","currentSrc","setCurrentSrc","fetchData","response","uri","window","onSpotifyIframeApiReady","IFrameAPI","element","document","getElementById","options","callback","EmbedController","loadUri","createController","Object","keys","map","moodName","mood","displayName"],"sources":["/Users/leemadeleine/dev/music-app/music-app/src/components/SimpleScreen/SimpleScreen.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getSimple } from \"../../services/APIs/MusicAppAPI/MusicAppAPI.js\";\nimport { moods } from \"./config.js\";\n\nconst Container = styled.div``;\n\nconst getSrc = (externalUrl) => {\n  const parts = externalUrl.split(\"/playlist/\");\n  const src = parts[0] + \"/embed/playlist/\" + parts[1];\n  return src;\n};\n\nconst SimpleScreen = () => {\n  const [hasError, setHasError] = useState(false);\n  const [currentMood, setCurrentMood] = useState(null);\n  const [currentURI, setCurrentURI] = useState(null);\n  const [currentSrc, setCurrentSrc] = useState(null);\n  \n  useEffect(() => {\n    if (currentMood) {\n      try {\n        async function fetchData() {\n          const response = await getSimple(currentMood);\n          setCurrentURI(response.uri);\n          setCurrentSrc(getSrc(response.uri));\n        }\n        fetchData();\n      } catch {\n        setHasError(true);\n      }\n    }\n  }, [currentMood]);\n\n  useEffect(() => {\n    window.onSpotifyIframeApiReady = (IFrameAPI) => {\n      let element = document.getElementById(\"embed-iframe\");\n      let options = {\n        uri: \"spotify:playlist:71I1utEsNeXmb4O28RAeaz\",\n      };\n      let callback = (EmbedController) => {\n        if (currentURI) {\n          EmbedController.loadUri(currentURI);\n          setCurrentURI(null);\n        }\n      };\n      IFrameAPI.createController(element, options, callback);\n    };\n  }, [currentURI]);\n\n  return (\n    <Container>\n      <h1>Simple Screen</h1>\n      {Object.keys(moods).map((moodName) => {\n        const mood = moods[moodName];\n        return (\n          <div key={moodName} onClick={() => setCurrentMood(moodName)}>\n            {mood.displayName}\n          </div>\n        );\n      })}\n      <div id=\"embed-iframe\">\n        <iframe\n          key={currentURI}\n          title=\"playlist-iframe\"\n          src={\n            currentSrc ||\n            \"https://open.spotify.com/playlist/71I1utEsNeXmb4O28RAeaz?utm_source=generator\"\n          }\n          width=\"380\"\n          height=\"380\"\n          frameBorder=\"0\"\n          allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n        ></iframe>\n      </div>\n\n      {hasError && <div>Error</div>}\n    </Container>\n  );\n};\n\nexport default SimpleScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}