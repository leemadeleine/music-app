{"ast":null,"code":"var _jsxFileName = \"/Users/leemadeleine/dev/music-app/music-app/src/components/SimpleScreen/SimpleScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getSimple } from \"../../services/APIs/MusicAppAPI/MusicAppAPI.js\";\nimport PropTypes from \"prop-types\";\nimport { getRandomNumberMinMax } from \"../../utils/Utils.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div``;\n_c = Container;\nconst SimpleScreen = _ref => {\n  _s();\n  let {\n    token\n  } = _ref;\n  const [hasError, setHasError] = useState(false);\n  const [allContent, setAllContent] = useState(null);\n  const [currentContent, setCurrentContent] = useState(null);\n  const [fetchSuccess, setFetchSuccess] = useState(false);\n  const [fetchStarted, setFetchStarted] = useState(false);\n  useEffect(() => {\n    // Fetch all playlist info once\n    if (token && !fetchStarted && !fetchSuccess) {\n      const fetchData = async () => {\n        const response = await getSimple(token);\n        const data = response.data;\n        setAllContent(data);\n        setFetchSuccess(true);\n      };\n      try {\n        setFetchStarted(true);\n        fetchData();\n      } catch {\n        setHasError(true);\n        setFetchSuccess(false);\n        setFetchStarted(false);\n      }\n    }\n  }, [token, allContent, fetchStarted, fetchSuccess]);\n\n  // Set/udpate the specific playlist info\n  const setContent = () => {\n    const obj = allContent[getRandomNumberMinMax(0, 49)];\n    setCurrentContent(obj);\n    console.log(obj);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"update-btn\",\n      onClick: () => setContent(),\n      children: \"Pull random playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), currentContent && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(currentContent)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 26\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleScreen, \"5aj3JwyPelIvhlVwD7gnNI92QSI=\");\n_c2 = SimpleScreen;\nSimpleScreen.defaultProps = {\n  token: null\n};\nSimpleScreen.propTypes = {\n  token: PropTypes.string\n};\nexport default SimpleScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SimpleScreen\");","map":{"version":3,"names":["useEffect","useState","styled","getSimple","PropTypes","getRandomNumberMinMax","Container","div","SimpleScreen","token","hasError","setHasError","allContent","setAllContent","currentContent","setCurrentContent","fetchSuccess","setFetchSuccess","fetchStarted","setFetchStarted","fetchData","response","data","setContent","obj","console","log","JSON","stringify","defaultProps","propTypes","string"],"sources":["/Users/leemadeleine/dev/music-app/music-app/src/components/SimpleScreen/SimpleScreen.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getSimple } from \"../../services/APIs/MusicAppAPI/MusicAppAPI.js\";\nimport PropTypes from \"prop-types\";\nimport { getRandomNumberMinMax } from \"../../utils/Utils.js\";\n\nconst Container = styled.div``;\n\nconst SimpleScreen = ({ token }) => {\n  const [hasError, setHasError] = useState(false);\n  const [allContent, setAllContent] = useState(null);\n  const [currentContent, setCurrentContent] = useState(null);\n  const [fetchSuccess, setFetchSuccess] = useState(false);\n  const [fetchStarted, setFetchStarted] = useState(false);\n\n  useEffect(() => {\n    // Fetch all playlist info once\n    if (token && !fetchStarted && !fetchSuccess) {\n      const fetchData = async () => {\n        const response = await getSimple(token);\n        const data = response.data;\n        setAllContent(data);\n        setFetchSuccess(true);\n      };\n      try {\n        setFetchStarted(true);\n        fetchData();\n      } catch {\n        setHasError(true);\n        setFetchSuccess(false);\n        setFetchStarted(false);\n      }\n    }\n  }, [token, allContent, fetchStarted, fetchSuccess]);\n\n  // Set/udpate the specific playlist info\n  const setContent = () => {\n    const obj = allContent[getRandomNumberMinMax(0, 49)];\n    setCurrentContent(obj);\n    console.log(obj);\n  };\n\n  return (\n    <Container>\n      <h1>Simple Screen</h1>\n      <h2 id=\"update-btn\" onClick={() => setContent()}>\n        Pull random playlist\n      </h2>\n      {currentContent && <div>{JSON.stringify(currentContent)}</div>}\n      {hasError && <div>Error</div>}\n    </Container>\n  );\n};\n\nSimpleScreen.defaultProps = {\n  token: null,\n};\n\nSimpleScreen.propTypes = {\n  token: PropTypes.string,\n};\n\nexport default SimpleScreen;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,gDAAgD;AAC1E,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,qBAAqB,QAAQ,sBAAsB;AAAC;AAE7D,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI,EAAC;AAAC,KAAzBD,SAAS;AAEf,MAAME,YAAY,GAAG,QAAe;EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd;IACA,IAAIS,KAAK,IAAI,CAACS,YAAY,IAAI,CAACF,YAAY,EAAE;MAC3C,MAAMI,SAAS,GAAG,YAAY;QAC5B,MAAMC,QAAQ,GAAG,MAAMlB,SAAS,CAACM,KAAK,CAAC;QACvC,MAAMa,IAAI,GAAGD,QAAQ,CAACC,IAAI;QAC1BT,aAAa,CAACS,IAAI,CAAC;QACnBL,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC;MACD,IAAI;QACFE,eAAe,CAAC,IAAI,CAAC;QACrBC,SAAS,EAAE;MACb,CAAC,CAAC,MAAM;QACNT,WAAW,CAAC,IAAI,CAAC;QACjBM,eAAe,CAAC,KAAK,CAAC;QACtBE,eAAe,CAAC,KAAK,CAAC;MACxB;IACF;EACF,CAAC,EAAE,CAACV,KAAK,EAAEG,UAAU,EAAEM,YAAY,EAAEF,YAAY,CAAC,CAAC;;EAEnD;EACA,MAAMO,UAAU,GAAG,MAAM;IACvB,MAAMC,GAAG,GAAGZ,UAAU,CAACP,qBAAqB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACpDU,iBAAiB,CAACS,GAAG,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB,CAAC;EAED,oBACE,QAAC,SAAS;IAAA,wBACR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAI,EAAE,EAAC,YAAY;MAAC,OAAO,EAAE,MAAMD,UAAU,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE3C,EACJT,cAAc,iBAAI;MAAA,UAAMa,IAAI,CAACC,SAAS,CAACd,cAAc;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,EAC7DJ,QAAQ,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA;IAAA;IAAA;IAAA;EAAA,QACnB;AAEhB,CAAC;AAAC,GA5CIF,YAAY;AAAA,MAAZA,YAAY;AA8ClBA,YAAY,CAACqB,YAAY,GAAG;EAC1BpB,KAAK,EAAE;AACT,CAAC;AAEDD,YAAY,CAACsB,SAAS,GAAG;EACvBrB,KAAK,EAAEL,SAAS,CAAC2B;AACnB,CAAC;AAED,eAAevB,YAAY;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}