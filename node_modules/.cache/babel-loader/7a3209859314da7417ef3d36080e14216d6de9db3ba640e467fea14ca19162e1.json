{"ast":null,"code":"var _jsxFileName = \"/Users/leemadeleine/dev/music-app/music-app/src/components/SimpleScreen/SimpleScreen.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getOembed, getRecommendations } from \"../../services/APIs/MusicAppAPI/MusicAppAPI.js\";\nimport PropTypes from \"prop-types\";\nimport { moods } from \"./moodConfig.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 600px;\n  text-align: center;\n  margin: auto;\n  font-family: Poppins;\n  h1 {\n    font-weight: 100;\n  }\n  h2 {\n    font-weight: 200;\n  }\n  background: none;\n  color: white;\n  padding: 32px 0;\n`;\n_c = Container;\nconst Title = styled.h1`\n  margin-top: 0;\n  font-size: 72px;\n`;\n_c2 = Title;\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 48px;\n`;\n_c3 = ButtonContainer;\nconst MoodH2 = styled.h2`\n`;\n_c4 = MoodH2;\nconst SimpleScreen = _ref => {\n  _s();\n  let {\n    token\n  } = _ref;\n  const [currentPlaylistHTML, setCurrentPlaylistHTML] = useState(null);\n\n  // Set/udpate the specific playlist info\n  const setContent = async mood => {\n    const recs = await getRecommendations(token, mood);\n    const oembed = await getOembed(recs.data.tracks[0].album.external_urls.spotify);\n    console.log(oembed.html);\n    let html = oembed.html.replace('width=\"100%\"', 'width=\"300\"');\n    html = html.replace('height=\"380\"', 'height=\"300\"');\n    html = html.replace('frameborder=\"0', 'frameborder=\"100\"');\n    console.log(html);\n    setCurrentPlaylistHTML(html);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"mood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: Object.keys(moods).map(key => {\n        const mood = moods[key];\n        return /*#__PURE__*/_jsxDEV(MoodH2, {\n          id: \"update-btn\",\n          onClick: () => setContent(mood.tag),\n          children: mood.label\n        }, mood.tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), currentPlaylistHTML && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"100%\",\n      height: \"380\",\n      title: \"Spotify Embed: Noir Ambiance\",\n      frameborder: \"0\",\n      allowfullscreen: true,\n      allow: \"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\",\n      loading: \"lazy\",\n      src: \"https://open.spotify.com/embed/album/1JWQ0bRBdTq7pg617idAtU?utm_source=oembed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleScreen, \"KtwewMqXaAxOnJsf8uBOJ2kD6Gg=\");\n_c5 = SimpleScreen;\nSimpleScreen.defaultProps = {\n  token: null\n};\nSimpleScreen.propTypes = {\n  token: PropTypes.string\n};\nexport default SimpleScreen;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"ButtonContainer\");\n$RefreshReg$(_c4, \"MoodH2\");\n$RefreshReg$(_c5, \"SimpleScreen\");","map":{"version":3,"names":["useState","styled","getOembed","getRecommendations","PropTypes","moods","Container","div","Title","h1","ButtonContainer","MoodH2","h2","SimpleScreen","token","currentPlaylistHTML","setCurrentPlaylistHTML","setContent","mood","recs","oembed","data","tracks","album","external_urls","spotify","console","log","html","replace","Object","keys","map","key","tag","label","defaultProps","propTypes","string"],"sources":["/Users/leemadeleine/dev/music-app/music-app/src/components/SimpleScreen/SimpleScreen.js"],"sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  getOembed,\n  getRecommendations,\n} from \"../../services/APIs/MusicAppAPI/MusicAppAPI.js\";\nimport PropTypes from \"prop-types\";\nimport { moods } from \"./moodConfig.js\";\n\nconst Container = styled.div`\n  max-width: 600px;\n  text-align: center;\n  margin: auto;\n  font-family: Poppins;\n  h1 {\n    font-weight: 100;\n  }\n  h2 {\n    font-weight: 200;\n  }\n  background: none;\n  color: white;\n  padding: 32px 0;\n`;\n\nconst Title = styled.h1`\n  margin-top: 0;\n  font-size: 72px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 48px;\n`;\n\nconst MoodH2 = styled.h2`\n`;\n\nconst SimpleScreen = ({ token }) => {\n  const [currentPlaylistHTML, setCurrentPlaylistHTML] = useState(null);\n\n  // Set/udpate the specific playlist info\n  const setContent = async (mood) => {\n    const recs = await getRecommendations(token, mood);\n    const oembed = await getOembed(\n      recs.data.tracks[0].album.external_urls.spotify\n    );\n    console.log(oembed.html)\n    let html = oembed.html.replace('width=\"100%\"', 'width=\"300\"');\n    html = html.replace('height=\"380\"', 'height=\"300\"');\n    html = html.replace('frameborder=\"0', 'frameborder=\"100\"');\n    console.log(html);\n    setCurrentPlaylistHTML(html);\n  };\n\n  return (\n    <Container>\n      <Title>mood</Title>\n      <ButtonContainer>\n        {Object.keys(moods).map((key) => {\n          const mood = moods[key];\n          return (\n            <MoodH2 key={mood.tag} id=\"update-btn\" onClick={() => setContent(mood.tag)}>\n              {mood.label}\n            </MoodH2>\n          )\n        })}\n      </ButtonContainer>\n      {currentPlaylistHTML && (\n        <iframe width=\"100%\" height=\"380\" title=\"Spotify Embed: Noir Ambiance\" frameborder=\"0\" allowfullscreen allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" loading=\"lazy\" src=\"https://open.spotify.com/embed/album/1JWQ0bRBdTq7pg617idAtU?utm_source=oembed\"></iframe>\n      )}\n    </Container>\n  );\n};\n\nSimpleScreen.defaultProps = {\n  token: null,\n};\n\nSimpleScreen.propTypes = {\n  token: PropTypes.string,\n};\n\nexport default SimpleScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}