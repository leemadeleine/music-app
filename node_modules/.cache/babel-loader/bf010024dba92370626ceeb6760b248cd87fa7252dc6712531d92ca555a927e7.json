{"ast":null,"code":"var _jsxFileName = \"/Users/leemadeleine/dev/music-app/music-app/src/components/SimpleScreen/SimpleScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getSimple } from \"../../services/MusicAppAPI/MusicAppAPI.js\";\nimport { moods } from \"./config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div``;\n_c = Container;\nconst SimpleScreen = () => {\n  _s();\n  const [hasError, setHasError] = useState(false);\n  const [currentMood, setCurrentMood] = useState(null);\n  const [currentMoodData, setCurrentMoodData] = useState(null);\n  useEffect(() => {\n    if (currentMood) {\n      try {\n        async function fetchData() {\n          const response = await getSimple(currentMood);\n          setCurrentMoodData(response);\n        }\n        fetchData();\n      } catch {\n        setHasError(true);\n      }\n    }\n  }, [currentMood]);\n  window.onSpotifyIframeApiReady = IFrameAPI => {\n    let element = document.getElementById(\"embed-iframe\");\n    let options = {\n      uri: \"spotify:episode:7makk4oTQel546B0PZlDM5\"\n    };\n    let callback = EmbedController => {};\n    IFrameAPI.createController(element, options, callback);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), Object.keys(moods).map(moodName => {\n      const mood = moods[moodName];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setCurrentMood(moodName),\n        children: mood.displayName\n      }, moodName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentMoodData ? currentMoodData.mood : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"embed-iframe\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: \"spotify-embed\",\n        style: {\n          \"border-radius\": \"12px\"\n        },\n        src: \"https://open.spotify.com/embed/album/151w1FgRZfnKZA9FEcg9Z3?utm_source=generator\",\n        width: \"100%\",\n        height: \"380\",\n        frameBorder: \"0\",\n        allowfullscreen: \"\",\n        allow: \"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\",\n        loading: \"lazy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleScreen, \"OFsakBRqmsp55iQ2xe8ajpLo6ug=\");\n_c2 = SimpleScreen;\nexport default SimpleScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SimpleScreen\");","map":{"version":3,"names":["useEffect","useState","styled","getSimple","moods","Container","div","SimpleScreen","hasError","setHasError","currentMood","setCurrentMood","currentMoodData","setCurrentMoodData","fetchData","response","window","onSpotifyIframeApiReady","IFrameAPI","element","document","getElementById","options","uri","callback","EmbedController","createController","Object","keys","map","moodName","mood","displayName"],"sources":["/Users/leemadeleine/dev/music-app/music-app/src/components/SimpleScreen/SimpleScreen.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getSimple } from \"../../services/MusicAppAPI/MusicAppAPI.js\";\nimport { moods } from \"./config.js\";\n\nconst Container = styled.div``;\n\nconst SimpleScreen = () => {\n  const [hasError, setHasError] = useState(false);\n  const [currentMood, setCurrentMood] = useState(null);\n  const [currentMoodData, setCurrentMoodData] = useState(null);\n  useEffect(() => {\n    if (currentMood) {\n      try {\n        async function fetchData() {\n          const response = await getSimple(currentMood);\n          setCurrentMoodData(response);\n        }\n        fetchData();\n      } catch {\n        setHasError(true);\n      }\n    }\n  }, [currentMood]);\n\n  window.onSpotifyIframeApiReady = (IFrameAPI) => {\n    let element = document.getElementById(\"embed-iframe\");\n    let options = {\n      uri: \"spotify:episode:7makk4oTQel546B0PZlDM5\",\n    };\n    let callback = (EmbedController) => {};\n    IFrameAPI.createController(element, options, callback);\n  };\n\n  return (\n    <Container>\n      <h1>Simple Screen</h1>\n      {Object.keys(moods).map((moodName) => {\n        const mood = moods[moodName];\n        return (\n          <div key={moodName} onClick={() => setCurrentMood(moodName)}>\n            {mood.displayName}\n          </div>\n        );\n      })}\n      <div>{currentMoodData ? currentMoodData.mood : null}</div>\n      <div id=\"embed-iframe\">\n        <iframe\n          title=\"spotify-embed\"\n          style={{ \"border-radius\": \"12px\" }}\n          src=\"https://open.spotify.com/embed/album/151w1FgRZfnKZA9FEcg9Z3?utm_source=generator\"\n          width=\"100%\"\n          height=\"380\"\n          frameBorder=\"0\"\n          allowfullscreen=\"\"\n          allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n          loading=\"lazy\"\n        ></iframe>\n      </div>\n\n      {hasError && <div>Error</div>}\n    </Container>\n  );\n};\n\nexport default SimpleScreen;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,2CAA2C;AACrE,SAASC,KAAK,QAAQ,aAAa;AAAC;AAEpC,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI,EAAC;AAAC,KAAzBD,SAAS;AAEf,MAAME,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5DD,SAAS,CAAC,MAAM;IACd,IAAIU,WAAW,EAAE;MACf,IAAI;QACF,eAAeI,SAAS,GAAG;UACzB,MAAMC,QAAQ,GAAG,MAAMZ,SAAS,CAACO,WAAW,CAAC;UAC7CG,kBAAkB,CAACE,QAAQ,CAAC;QAC9B;QACAD,SAAS,EAAE;MACb,CAAC,CAAC,MAAM;QACNL,WAAW,CAAC,IAAI,CAAC;MACnB;IACF;EACF,CAAC,EAAE,CAACC,WAAW,CAAC,CAAC;EAEjBM,MAAM,CAACC,uBAAuB,GAAIC,SAAS,IAAK;IAC9C,IAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IACrD,IAAIC,OAAO,GAAG;MACZC,GAAG,EAAE;IACP,CAAC;IACD,IAAIC,QAAQ,GAAIC,eAAe,IAAK,CAAC,CAAC;IACtCP,SAAS,CAACQ,gBAAgB,CAACP,OAAO,EAAEG,OAAO,EAAEE,QAAQ,CAAC;EACxD,CAAC;EAED,oBACE,QAAC,SAAS;IAAA,wBACR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrBG,MAAM,CAACC,IAAI,CAACxB,KAAK,CAAC,CAACyB,GAAG,CAAEC,QAAQ,IAAK;MACpC,MAAMC,IAAI,GAAG3B,KAAK,CAAC0B,QAAQ,CAAC;MAC5B,oBACE;QAAoB,OAAO,EAAE,MAAMnB,cAAc,CAACmB,QAAQ,CAAE;QAAA,UACzDC,IAAI,CAACC;MAAW,GADTF,QAAQ;QAAA;QAAA;QAAA;MAAA,QAEZ;IAEV,CAAC,CAAC,eACF;MAAA,UAAMlB,eAAe,GAAGA,eAAe,CAACmB,IAAI,GAAG;IAAI;MAAA;MAAA;MAAA;IAAA,QAAO,eAC1D;MAAK,EAAE,EAAC,cAAc;MAAA,uBACpB;QACE,KAAK,EAAC,eAAe;QACrB,KAAK,EAAE;UAAE,eAAe,EAAE;QAAO,CAAE;QACnC,GAAG,EAAC,kFAAkF;QACtF,KAAK,EAAC,MAAM;QACZ,MAAM,EAAC,KAAK;QACZ,WAAW,EAAC,GAAG;QACf,eAAe,EAAC,EAAE;QAClB,KAAK,EAAC,4EAA4E;QAClF,OAAO,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IACN;MAAA;MAAA;MAAA;IAAA,QACN,EAELvB,QAAQ,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA;IAAA;IAAA;IAAA;EAAA,QACnB;AAEhB,CAAC;AAAC,GAxDID,YAAY;AAAA,MAAZA,YAAY;AA0DlB,eAAeA,YAAY;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}