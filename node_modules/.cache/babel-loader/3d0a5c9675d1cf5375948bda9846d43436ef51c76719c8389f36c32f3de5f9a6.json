{"ast":null,"code":"var _jsxFileName = \"/Users/leemadeleine/dev/music-app/music-app/src/components/SimpleScreen/SimpleScreen.js\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getSimple } from \"../../services/APIs/MusicAppAPI/MusicAppAPI.js\";\nimport PropTypes from \"prop-types\";\nimport { getRandomNumberMinMax } from \"../../utils/Utils.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div``;\n_c = Container;\nconst SimpleScreen = _ref => {\n  let {\n    token\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"update-btn\",\n      onClick: () => console.log('test'),\n      children: \"Pull random playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SimpleScreen;\nSimpleScreen.defaultProps = {\n  token: null\n};\nSimpleScreen.propTypes = {\n  token: PropTypes.string\n};\nexport default SimpleScreen;\n\n// const [hasError, setHasError] = useState(false);\n// const [allContent, setAllContent] = useState(null);\n// const [currentContent, setCurrentContent] = useState(null);\n// const [fetchSuccess, setFetchSuccess] = useState(false);\n// const [fetchStarted, setFetchStarted] = useState(false);\n\n// useEffect(() => {\n//   // Fetch all playlist info once\n//   if (token && !fetchStarted && !fetchSuccess) {\n//     const fetchData = async () => {\n//       const response = await getSimple(token);\n//       const data = response.data;\n//       setAllContent(data);\n//       setFetchSuccess(true);\n//     };\n//     try {\n//       setFetchStarted(true);\n//       fetchData();\n//     } catch {\n//       setHasError(true);\n//       setFetchSuccess(false);\n//       setFetchStarted(false);\n//     }\n//   }\n// }, [token, allContent, fetchStarted, fetchSuccess]);\n\n// // Set/udpate the specific playlist info\n// const setContent = () => {\n//   const obj = allContent[getRandomNumberMinMax(0, 49)];\n//   setCurrentContent(obj.data);\n// };\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SimpleScreen\");","map":{"version":3,"names":["useEffect","useState","styled","getSimple","PropTypes","getRandomNumberMinMax","Container","div","SimpleScreen","token","console","log","defaultProps","propTypes","string"],"sources":["/Users/leemadeleine/dev/music-app/music-app/src/components/SimpleScreen/SimpleScreen.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getSimple } from \"../../services/APIs/MusicAppAPI/MusicAppAPI.js\";\nimport PropTypes from \"prop-types\";\nimport { getRandomNumberMinMax } from \"../../utils/Utils.js\";\n\nconst Container = styled.div``;\n\nconst SimpleScreen = ({ token }) => {\n  return (\n    <Container>\n      <h1>Simple Screen</h1>\n      <h2 id=\"update-btn\" onClick={() => console.log('test')}>\n        Pull random playlist\n      </h2>\n      {/* {currentContent && <div>{currentContent}</div>}\n      {hasError && <div>Error</div>} */}\n    </Container>\n  );\n};\n\nSimpleScreen.defaultProps = {\n  token: null,\n};\n\nSimpleScreen.propTypes = {\n  token: PropTypes.string,\n};\n\nexport default SimpleScreen;\n\n\n  // const [hasError, setHasError] = useState(false);\n  // const [allContent, setAllContent] = useState(null);\n  // const [currentContent, setCurrentContent] = useState(null);\n  // const [fetchSuccess, setFetchSuccess] = useState(false);\n  // const [fetchStarted, setFetchStarted] = useState(false);\n\n  // useEffect(() => {\n  //   // Fetch all playlist info once\n  //   if (token && !fetchStarted && !fetchSuccess) {\n  //     const fetchData = async () => {\n  //       const response = await getSimple(token);\n  //       const data = response.data;\n  //       setAllContent(data);\n  //       setFetchSuccess(true);\n  //     };\n  //     try {\n  //       setFetchStarted(true);\n  //       fetchData();\n  //     } catch {\n  //       setHasError(true);\n  //       setFetchSuccess(false);\n  //       setFetchStarted(false);\n  //     }\n  //   }\n  // }, [token, allContent, fetchStarted, fetchSuccess]);\n\n  // // Set/udpate the specific playlist info\n  // const setContent = () => {\n  //   const obj = allContent[getRandomNumberMinMax(0, 49)];\n  //   setCurrentContent(obj.data);\n  // };"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,gDAAgD;AAC1E,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,qBAAqB,QAAQ,sBAAsB;AAAC;AAE7D,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI,EAAC;AAAC,KAAzBD,SAAS;AAEf,MAAME,YAAY,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAM,CAAC;EAC7B,oBACE,QAAC,SAAS;IAAA,wBACR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAI,EAAE,EAAC,YAAY;MAAC,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAElD;EAAA;IAAA;IAAA;IAAA;EAAA,QAGK;AAEhB,CAAC;AAAC,MAXIH,YAAY;AAalBA,YAAY,CAACI,YAAY,GAAG;EAC1BH,KAAK,EAAE;AACT,CAAC;AAEDD,YAAY,CAACK,SAAS,GAAG;EACvBJ,KAAK,EAAEL,SAAS,CAACU;AACnB,CAAC;AAED,eAAeN,YAAY;;AAGzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}