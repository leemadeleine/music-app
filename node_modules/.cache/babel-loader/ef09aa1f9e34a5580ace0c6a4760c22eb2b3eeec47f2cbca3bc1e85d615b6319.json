{"ast":null,"code":"var _jsxFileName = \"/Users/leemadeleine/dev/music-app/music-app/src/utils/store.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from \"react\";\nimport { getSimple } from \"../services/MusicAppAPI/MusicAppAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {};\nconst store = /*#__PURE__*/createContext(initialState);\nconst {\n  Provider\n} = store;\nconst StateProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"UPDATE_SIMPLE_SCREEN\":\n        const response = getSimple(action.payload.newMood);\n        const {\n          mood\n        } = response;\n        console.log(response, mood);\n        return {\n          state,\n          ...{\n            currentMood: mood\n          }\n        };\n      default:\n        throw new Error();\n    }\n  }, initialState);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_s(StateProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = StateProvider;\nexport { store, StateProvider };\nvar _c;\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"names":["React","createContext","useReducer","getSimple","initialState","store","Provider","StateProvider","children","state","dispatch","action","type","response","payload","newMood","mood","console","log","currentMood","Error"],"sources":["/Users/leemadeleine/dev/music-app/music-app/src/utils/store.js"],"sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport { getSimple } from \"../services/MusicAppAPI/MusicAppAPI\";\n\nconst initialState = {};\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"UPDATE_SIMPLE_SCREEN\":\n        const response = getSimple(action.payload.newMood);\n        const { mood } = response;\n        console.log(response, mood);\n\n        return { state, ...{ currentMood: mood } };\n      default:\n        throw new Error();\n    }\n  }, initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,qCAAqC;AAAC;AAEhE,MAAMC,YAAY,GAAG,CAAC,CAAC;AACvB,MAAMC,KAAK,gBAAGJ,aAAa,CAACG,YAAY,CAAC;AACzC,MAAM;EAAEE;AAAS,CAAC,GAAGD,KAAK;AAE1B,MAAME,aAAa,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,UAAU,CAAC,CAACO,KAAK,EAAEE,MAAM,KAAK;IACtD,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAK,sBAAsB;QACzB,MAAMC,QAAQ,GAAGV,SAAS,CAACQ,MAAM,CAACG,OAAO,CAACC,OAAO,CAAC;QAClD,MAAM;UAAEC;QAAK,CAAC,GAAGH,QAAQ;QACzBI,OAAO,CAACC,GAAG,CAACL,QAAQ,EAAEG,IAAI,CAAC;QAE3B,OAAO;UAAEP,KAAK;UAAE,GAAG;YAAEU,WAAW,EAAEH;UAAK;QAAE,CAAC;MAC5C;QACE,MAAM,IAAII,KAAK,EAAE;IAAC;EAExB,CAAC,EAAEhB,YAAY,CAAC;EAEhB,oBAAO,QAAC,QAAQ;IAAC,KAAK,EAAE;MAAEK,KAAK;MAAEC;IAAS,CAAE;IAAA,UAAEF;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAY;AACpE,CAAC;AAAC,GAfID,aAAa;AAAA,KAAbA,aAAa;AAiBnB,SAASF,KAAK,EAAEE,aAAa;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}